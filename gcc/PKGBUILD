# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Martell Malone <martellmalone@gmail.com>
# Contributor: Ray Donnelly <mingw.android@gmail.com>

# toolchain build order: win32-api-headers->msys2-runtime->binutils->gcc->binutils->msys2-runtime
# NOTE: libtool requires rebuilt with each new gcc version

pkgbase=gcc
pkgname=('gcc' 'gcc-libs' 'gcc-fortran')
pkgver=5.3.0
pkgrel=4
pkgdesc="The GNU Compiler Collection"
arch=('i686' 'x86_64')
groups=('msys2-devel')
license=('GPL' 'LGPL' 'FDL' 'custom')
url="http://gcc.gnu.org"
makedepends=('binutils' 'mpc-devel' 'gmp-devel'
             'mpfr-devel' 'isl-devel' 'zlib-devel'
             'windows-default-manifest')
STRIP_OPTION="strip"
#STRIP_OPTION="!strip"
#DEBUG_OPTION="debug"
DEBUG_OPTION="!debug"
options=('!emptydirs' "$STRIP_OPTION" "$DEBUG_OPTION")
source=(ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.bz2
        0001-share-mingw-fset-stack-executable-with-cygwin.patch
        0002-boehm-gc-for-cygwin.patch
        0003-AWT-Font-fix-for-Cygwin.patch
        0004-Cygwin-ioctl-may-emit-EINVAL.patch
        0005-use-avoid-version-if-not-tracking-SO-version.patch
        0006-cygwin-uses-cyg-library-prefix.patch
        0007-Avoid-installing-libffi.patch
        0009-Cygwin-uses-sysv-ABI-on-x86_64.patch
        0010-Do-not-version-lto-plugin-on-cygwin-mingw.patch
        0011-add-dummy-pthread-tsaware-and-large-address-aware-fo.patch
        0012-handle-dllimport-properly-in-medium-model.patch
        0013-skip-test-for-cygwin-mingw.patch
        0014-64bit-Cygwin-uses-SEH.patch
        0015-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENABLE-for.patch
        0016-fix-some-implicit-declaration-warnings.patch
        0017-__cxa-atexit-for-Cygwin.patch
        0018-prevent-modules-from-being-unloaded-before-their-dto.patch
        0019-Cygwin-doesn-t-do-text-mode-translations-for-file-ha.patch
        0020-cygwin-uses-cyg-lib-prefix.patch
        0021-search-usr-lib-w32api-explicitly.patch
        0022-libgomp-soname-cygwin-mingw.patch
        0023-glibcxx-use-c99.patch
        0024-libitm-weak-symbols.patch
        0025-enable-libcilkrts.patch
        0026-g++-gnu-source.patch
        0027-link-w32api.patch
        0950-5.2.0-configure-msys2.patch
        0951-5.2.0-msys2-spec.patch
        0953-5.2.0-testsuite-msys2.patch
        0955-4.9.2-apply-hack-so-gcc_s-isnt-stripped.patch)
md5sums=('c9616fd448f980259c31de613e575719'
         '7d49c7e9395ebfe572ec0ea3e88fdf2e'
         '90c20705f3dd2559f90367bcb81c3e65'
         '939c9c0799f52438e33da05b36512632'
         '5fa6e22718b0095625d81e8f99a0794f'
         '219d2f8836ad4748cbb2edf179ace5ed'
         'dc73edea555de0930275a097de78bcda'
         '743b3dfc82a8f7fc75a0766ea6280c8d'
         '50efcfb3435fdadbdeaf4af6b1360934'
         '789ca74419d760573ddb8a49cce0dd8a'
         'e9e5e906b4ae633ecfae541ffa90b8d3'
         '93bddcc26cb584c6cf671b980944cdd9'
         '4b78a2260ff1ebcb2ca3c24d6e84d3e8'
         '06a2a441824a0a23c107559480f04ea3'
         '1776fe8ac823775512afe70c2d7194cb'
         'b453504d3af9920b95a7b8a6fb45b88a'
         '8615bec7ec4604b1f22101f19c2569ca'
         '47f51f1845c30fae11ac68037b2759ed'
         '17b44296f37edeedf01b1604753a5a99'
         '2abea44d8d5b88d939892e1d64a6e77a'
         '2741574c4ba7b963b3faec3a94ddc59a'
         '188e3ad9985b1b6116e25d6ac8aec9e5'
         '380b1cce28064fff4a25cc7d7af27fb2'
         '6a82f8bba9b3aa782e34753fa7257087'
         '8ce22ffc3e3327777755ae6e8807d847'
         '1a1948b9668a0a9ff8dad6899263dbbb'
         '13c25ca517aeffb9bbb3cc0ab7b390e2'
         'b5c3fae297836101d7a350485b1bbe8a'
         '84e444c9a07ce5ace279a2903e799d33'
         'cd51d73d8412bf92d8cb509552782e69'
         'd0bd90c3e2cb1847d774985f351c8e76')

prepare() {
  cd ${srcdir}/gcc-${pkgver}
  
  # Remove files created by patches
  rm -f gcc/ada/system-cygwin-x86_64.ads libgcc/config/i386/t-msys \
        gcc/config/i386/msys.h gcc/config/i386/msys-w64.h \
        gcc/config/i386/t-msys-w64 \
          > /dev/null 2>&1 | true

  # Cygwin patches
  patch -p1 -i ${srcdir}/0001-share-mingw-fset-stack-executable-with-cygwin.patch
  patch -p1 -i ${srcdir}/0002-boehm-gc-for-cygwin.patch
  patch -p1 -i ${srcdir}/0003-AWT-Font-fix-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0004-Cygwin-ioctl-may-emit-EINVAL.patch
  patch -p1 -i ${srcdir}/0005-use-avoid-version-if-not-tracking-SO-version.patch
  patch -p1 -i ${srcdir}/0006-cygwin-uses-cyg-library-prefix.patch
  patch -p1 -i ${srcdir}/0007-Avoid-installing-libffi.patch
  patch -p1 -i ${srcdir}/0009-Cygwin-uses-sysv-ABI-on-x86_64.patch
  patch -p1 -i ${srcdir}/0010-Do-not-version-lto-plugin-on-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0011-add-dummy-pthread-tsaware-and-large-address-aware-fo.patch
  patch -p1 -i ${srcdir}/0012-handle-dllimport-properly-in-medium-model.patch
  patch -p1 -i ${srcdir}/0013-skip-test-for-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0014-64bit-Cygwin-uses-SEH.patch
  patch -p1 -i ${srcdir}/0015-define-RTS_CONTROL_ENABLE-and-DTR_CONTROL_ENABLE-for.patch
  patch -p1 -i ${srcdir}/0016-fix-some-implicit-declaration-warnings.patch
  patch -p1 -i ${srcdir}/0017-__cxa-atexit-for-Cygwin.patch
  patch -p1 -i ${srcdir}/0018-prevent-modules-from-being-unloaded-before-their-dto.patch
  patch -p1 -i ${srcdir}/0019-Cygwin-doesn-t-do-text-mode-translations-for-file-ha.patch
  patch -p1 -i ${srcdir}/0020-cygwin-uses-cyg-lib-prefix.patch
  patch -p1 -i ${srcdir}/0021-search-usr-lib-w32api-explicitly.patch
  patch -p1 -i ${srcdir}/0022-libgomp-soname-cygwin-mingw.patch
  patch -p1 -i ${srcdir}/0023-glibcxx-use-c99.patch
  patch -p1 -i ${srcdir}/0024-libitm-weak-symbols.patch
  patch -p1 -i ${srcdir}/0025-enable-libcilkrts.patch
  patch -p1 -i ${srcdir}/0026-g++-gnu-source.patch
  patch -p1 -i ${srcdir}/0027-link-w32api.patch
  
  # MSYS2 Patches
  patch -p1 -i ${srcdir}/0950-5.2.0-configure-msys2.patch
  patch -p1 -i ${srcdir}/0951-5.2.0-msys2-spec.patch
  patch -p1 -i ${srcdir}/0953-5.2.0-testsuite-msys2.patch
  patch -p1 -i ${srcdir}/0955-4.9.2-apply-hack-so-gcc_s-isnt-stripped.patch

  # Do not run fixincludes
  #sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
  echo ${pkgver} > gcc/BASE-VER
  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure
  
  [[ -d ${srcdir}/build-$(arch) ]] && rm -rf ${srcdir}/build-$(arch)
  mkdir ${srcdir}/build-$(arch)
}

build() {
  cd ${srcdir}/build-$(arch)

  case ${CARCH} in
    i686)
      _arch=i686
      _arch_conf="--disable-sjlj-exceptions"
    ;;
    x86_64)
      _arch=x86-64
      _arch_conf=
    ;;
  esac

  # libgcc is built with -g0, but INHIBIT_LIBC_CFLAGS can
  # be used to undo that.
  if check_option "debug" "y"; then
    export INHIBIT_LIBC_CFLAGS="-g2"
  fi

  # using -pipe causes spurious test-suite failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  CFLAGS=${CFLAGS/-pipe/}
  CXXFLAGS=${CXXFLAGS/-pipe/}

  ${srcdir}/gcc-${pkgver}/configure \
    --build=${CHOST} \
    --prefix=/usr \
    --libexecdir=/usr/lib \
    --enable-bootstrap \
    --enable-shared --enable-shared-libgcc --enable-static \
    --enable-version-specific-runtime-libs \
    --with-arch=${_arch} \
    --with-tune=generic \
    --disable-multilib \
    ${_arch_conf} \
    --enable-__cxa_atexit \
    --with-dwarf2 \
    --enable-languages=c,c++,fortran,lto \
    --enable-graphite \
    --enable-threads=posix \
    --enable-libatomic \
    --enable-libcilkrts \
    --enable-libgomp \
    --enable-libitm \
    --enable-libquadmath \
    --enable-libquadmath-support \
    --enable-libssp \
    --disable-win32-registry \
    --disable-symvers \
    --with-gnu-ld \
    --with-gnu-as \
    --disable-isl-version-check \
    --enable-checking=release \
    --without-libiconv-prefix \
    --without-libintl-prefix \
    --with-system-zlib \
    --enable-linker-build-id \
    --with-default-libstdcxx-abi=gcc4-compatible

  make

  # make documentation
  #cd $CHOST/libstdc++-v3
  #make doc-man-doxygen
}

check() {
  cd ${srcdir}/build-$(arch)

  # do not abort on error as some are "expected"
  make -k check || true
  ${srcdir}/gcc-${pkgver}/contrib/test_summary
}

package_gcc-libs()
{
  pkgdesc="Runtime libraries shipped by GCC"
  groups=('base')
  depends=('msys2-runtime')
  install=gcc-libs.install

  cd ${srcdir}/build-$(arch)
  make -j1 -C $CHOST/libgcc DESTDIR=${pkgdir} install-shared
  for lib in libgomp libstdc++-v3/src; do
    make -j1 -C $CHOST/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  done

  make -j1 -C $CHOST/libstdc++-v3/po DESTDIR=${pkgdir} install
  make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-info
  make -j1 -C $CHOST/libquadmath DESTDIR=${pkgdir} install-info

  make -j1 DESTDIR=${pkgdir} install-target-libquadmath
  make -j1 DESTDIR=${pkgdir} install-target-libgfortran
  make -j1 DESTDIR=${pkgdir} install-target-libssp
  make -j1 DESTDIR=${pkgdir} install-target-libatomic
  make -j1 DESTDIR=${pkgdir} install-target-libcilkrts
  make -j1 DESTDIR=${pkgdir} install-target-libvtv

  rm -f ${pkgdir}/*.dll
  rm -rf ${pkgdir}/usr/lib/
  rm -rf ${pkgdir}/usr/share/gcc-${pkgver}

  # remove static libraries
  #find ${pkgdir} -name *.a -delete

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc()
{
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  depends=("gcc-libs=${pkgver}-${pkgrel}" 'binutils' 'gmp' 'isl' 'mpc' 'mpfr' 'msys2-runtime-devel' 'msys2-w32api-headers' 'msys2-w32api-runtime' 'windows-default-manifest')
  options=('staticlibs' "$STRIP_OPTION" "$DEBUG_OPTION")
  install=gcc.install

  cd ${srcdir}/build-$(arch)

  if check_option "strip" "n"; then
    export STRIP=true
  fi

  make -j1 DESTDIR=${pkgdir} install
  if [ "$CARCH" = "x86_64" ]
  then
    mv ${pkgdir}/usr/lib/gcc/${CHOST}/lib/libgcc_s.dll.a ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver/-*/.*}/
    rm -rf ${pkgdir}/usr/lib/gcc/${CHOST}/lib
  fi
  # install -d ${pkgdir}/usr/share/gdb/auto-load/usr/lib
  # mv $pkg{pkgdir}dir{,/usr/share/gdb/auto-load}/usr/lib/libstdc++.so.6.0.18-gdb.py

  # unfortunately it is much, much easier to install the lot and clean-up the mess...
  rm ${pkgdir}/usr/bin/{$CHOST-,}gfortran
  # remove all DLLs
  rm -f ${pkgdir}/usr/bin/*.dll

  rm -f ${pkgdir}/usr/lib/libiberty.a
  # rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libatomic{.dll,}.a
  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libgfortran{.dll,}.a
  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/libgfortran.spec
  rm -r ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/finclude
  rm -f ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/f951.exe
  rm -f ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/{libcaf_single,libgfortranbegin}.a
  rm -f ${pkgdir}/usr/share/info/{gfortran,libgomp,libquadmath}.info
  rm -f ${pkgdir}/usr/share/locale/{de,fr}/LC_MESSAGES/libstdc++.mo
  rm -f ${pkgdir}/usr/share/man/man1/gfortran.1

  # remove static libraries - note libstdc++.a is needed for the binutils and glibc testsuite
  #rm ${pkgdir}/usr/lib/gcc/${CHOST}/${pkgver}/lib{gomp,quadmath}{.dll,}.a

  # many packages expect this symlinks
  ln -s gcc ${pkgdir}/usr/bin/cc
  cp -f ${pkgdir}/usr/bin/cpp.exe ${pkgdir}/usr/lib/cpp

  # POSIX conformance launcher scripts for c89 and c99
  cat > $pkgdir/usr/bin/c89 <<"EOF"
#!/bin/sh
fl="-std=c89"
for opt; do
  case "\$opt" in
    -ansi|-std=c89|-std=iso9899:1990) fl="";;
    -std=*) echo "`basename \$0` called with non ANSI/ISO C option \$opt" >&2
	    exit 1;;
  esac
done
exec /usr/bin/gcc \$fl \${1+"\$@"}
EOF

  cat > ${pkgdir}/usr/bin/c99 <<"EOF"
#!/bin/sh
fl="-std=c99"
for opt; do
  case "\$opt" in
    -std=c99|-std=iso9899:1999) fl="";;
    -std=*) echo "`basename \$0` called with non ISO C99 option \$opt" >&2
	    exit 1;;
  esac
done
exec /usr/bin/gcc \$fl \${1+"\$@"}
EOF

  chmod 755 ${pkgdir}/usr/bin/c{8,9}9

  # install the libstdc++ man pages
  # install -dm755 ${pkgdir}/usr/share/man/man3
  # install -m644 -t ${pkgdir}/usr/share/man/man3 \
  #  ${CHOST}/libstdc++-v3/doc/doxygen/man/man3/*.3

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc-fortran()
{
  pkgdesc="Fortran front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")
  options=('staticlibs' '!emptydirs' "$STRIP_OPTION" "$DEBUG_OPTION")
  install=gcc-fortran.install

  cd ${srcdir}/build-$(arch)

  if check_option "strip" "n"; then
    export STRIP=true
  fi

  make -j1 DESTDIR=${pkgdir} install-target-libgfortran
  make -j1 -C $CHOST/libgomp DESTDIR=${pkgdir} install-nodist_fincludeHEADERS
  make -j1 -C gcc DESTDIR=${pkgdir} fortran.install-{common,man,info}
  install -Dm755 gcc/f951 ${pkgdir}/usr/lib/gcc/$CHOST/$pkgver/f951

  ln -s gfortran ${pkgdir}/usr/bin/f95

  rm -f ${pkgdir}/usr/lib/gcc/${CHOST}/lib/libgcc_s.dll.a
  # remove files included in gcc-libs or gcc and unnneeded static lib
  rm ${pkgdir}/usr/bin/*.dll
  rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/libquadmath.{dll.a,a}
  rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/{*.o,libgc*}
  rm ${pkgdir}/usr/share/info/libquadmath.info
  rm -r ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/include
  # rm ${pkgdir}/usr/lib/gcc/$CHOST/${pkgver}/libgfortran.a

  # Install Runtime Library Exception
  install -Dm644 ${srcdir}/gcc-${pkgver}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/gcc-fortran/RUNTIME.LIBRARY.EXCEPTION
}
